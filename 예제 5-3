#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct Node {
    char data;
    struct Node* next;
};

typedef struct Node Node;

struct LinkedStack {
    Node* top;
};

typedef struct LinkedStack LinkedStack;

void initStack(LinkedStack* stack) {
    stack->top = NULL;
}

int isEmpty(LinkedStack* stack) {
    return stack->top == NULL;
}

void push(LinkedStack* stack, char data) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    if (newNode == NULL) {
        printf("Memory allocation failed\n");
        return;
    }
    newNode->data = data;
    newNode->next = stack->top;
    stack->top = newNode;
}

char pop(LinkedStack* stack) {
    if (isEmpty(stack)) {
        printf("Stack is empty\n");
        return '\0';
    }
    Node* temp = stack->top;
    char popped = temp->data;
    stack->top = temp->next;
    free(temp);
    return popped;
}

char peek(LinkedStack* stack) {
    if (isEmpty(stack)) {
        return '\0';
    }
    return stack->top->data;
}

int isMatching(char open, char close) {
    if (open == '(' && close == ')') {
        return 1;
    } else if (open == '[' && close == ']') {
        return 1;
    } else if (open == '{' && close == '}') {
        return 1;
    }
    return 0;
}

int isBalanced(char* expression) {
    LinkedStack stack;
    initStack(&stack);

    for (int i = 0; i < strlen(expression); i++) {
        char currentChar = expression[i];
        if (currentChar == '(' || currentChar == '[' || currentChar == '{') {
            push(&stack, currentChar);
        } else if (currentChar == ')' || currentChar == ']' || currentChar == '}') {
            if (isEmpty(&stack)) {
                return 0;
            }
            char topChar = pop(&stack);
            if (!isMatching(topChar, currentChar)) {
                return 0;
            }
        }
    }

    return isEmpty(&stack);
}

int main() {
    char expression[] = "(A+B) 3)*5+[cos(xry)+711)*4";
    if (isBalanced(expression)) {
        printf("수식의 괄호가 맞게 사용되었습니다!\n");
    } else {
        printf("수식의 괄호가 잘못 사용되었습니다!\n");
    }
    return 0;
}
